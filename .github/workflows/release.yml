name: Release Changelog

# Only release on a new tag that is a version number.
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release_a_changelog:
    name: Release a Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Release a Changelog
        uses: rasmus-saks/release-a-changelog-action@v1.0.1
        with:
          github-token: '${{ secrets.GH_TOKEN }}'

  publish_service_containers:
    name: Publish service containers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ECR
        id: login-ecr
        uses: docker/login-action@v1
        with:
           registry: public.ecr.aws
           username: ${{ secrets.AWS_ACCESS_KEY_ID }}
           password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download, Tag, and Push Service Images
        run: |
          TAG=${GITHUB_REF/refs\/tags\//}

          IMAGES=(
            dtraining/advertisements
            ddtraining/advertisements-fixed
            ddtraining/discounts
            ddtraining/discounts-fixed
            ddtraining/storefront
            ddtraining/storefront-fixed
            ddtraining/attackbox
            public.ecr.aws/b1o7r7e0/ddtraining/advertisements
            public.ecr.aws/b1o7r7e0/ddtraining/advertisements-fixed
            public.ecr.aws/b1o7r7e0/ddtraining/discounts
            public.ecr.aws/b1o7r7e0/ddtraining/discounts-fixed
            public.ecr.aws/b1o7r7e0/ddtraining/storefront
            public.ecr.aws/b1o7r7e0/ddtraining/storefront-fixed
            public.ecr.aws/b1o7r7e0/ddtraining/attackbox
          )

          for i in "${IMAGES[@]}"
          do
            echo "$i"
            docker pull "$i":latest
            docker tag "$i":latest "$i":$TAG
            docker push "$i":$TAG
          done

          echo "All done"

