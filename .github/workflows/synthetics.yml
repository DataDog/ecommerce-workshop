name: Synthetics Test

on:
  push:
    branches:
      - ccole/synth-ci

jobs:   

  synthetics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build frontend
        uses: docker/build-push-action@v2
        with:
          context: ./store-frontend
          file: ./store-frontend/storefront-versions/store-frontend-instrumented-fixed/Dockerfile
          platforms: linux/amd64
          push: false
          tags: ${{ secrets.PUBLIC_ECR_REGISTRY }}/ddtraining/storefront-fixed:latest

      - name: Build discounts
        uses: docker/build-push-action@v2
        with:
          context: ./discounts-service-fixed
          platforms: linux/amd64
          push: false
          tags: ${{ secrets.PUBLIC_ECR_REGISTRY }}/ddtraining/discounts-fixed:latest

      - name: Pull images
        run: docker-compose -f deploy/docker-compose/docker-compose-latest.yml pull

      - name: Start app
        run: |
          make recreate-frontend-code
          DD_API_KEY=${{secrets.DD_API_KEY}} make latest-start

      - name: Wait for it
        run: |
          chmod +x ./wait-for-it.sh
          ./wait-for-it.sh -t 30 localhost:3000
          ./wait-for-it.sh -t 30 localhost:80

      - name: Run Datadog Synthetics tests
        uses: DataDog/synthetics-ci-github-action@v0.3.0
        with:
          api_key: ${{secrets.DD_API_KEY}}
          app_key: ${{secrets.DD_APP_KEY}}
