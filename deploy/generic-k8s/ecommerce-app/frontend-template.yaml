apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ecommerce
    service: frontend
    tags.datadoghq.com/env: {{ .Values.env }}
    tags.datadoghq.com/service: store-frontend
    tags.datadoghq.com/version: {{ .Values.version }}
  name: frontend
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: ecommerce
      service: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        ad.datadoghq.com/ecommerce-spree-observability.logs: '[{"source":"ruby","service":"store-frontend"}]'
      labels:
        app: ecommerce
        service: frontend
        tags.datadoghq.com/env: {{ .Values.env }}
        tags.datadoghq.com/service: store-frontend
        tags.datadoghq.com/version: {{ .Values.version }}
    spec:
      containers:
      - args:
        - docker-entrypoint.sh
        command:
        - sh
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DB_USERNAME
          value: user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: pw
              name: db-password
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_ANALYTICS_ENABLED
          value: "true"
        - name: DD_CLIENT_TOKEN
          valueFrom:
            secretKeyRef:
              key: client_token
              name: frontend-rum
        - name: DD_APPLICATION_ID
          valueFrom:
            secretKeyRef:
              key: application_id
              name: frontend-rum
        image: {{ .Values.image }}
        imagePullPolicy: Always
        name: ecommerce-spree-observability
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {{ .Values.resources }}


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    ad.datadoghq.com/endpoints.check_names: '["tcp_check"]'
    ad.datadoghq.com/endpoints.init_configs: '[{}]'
    ad.datadoghq.com/endpoints.instances: |
      [
        {
          "name": "frontend_endpoint",
          "host": "%%host%%",
          "port": "%%port%%",
          "collect_response_time": "true"
        }
      ]
    ad.datadoghq.com/service.check_names: '["http_check"]'
    ad.datadoghq.com/service.init_configs: '[{}]'
    ad.datadoghq.com/service.instances: |
      [
        {
          "name": "frontend_loadbalancer",
          "url": "http://%%host%%",
          "timeout": "15"
        }
      ]
  labels:
    app: ecommerce
    service: frontend
    tags.datadoghq.com/env: {{ .Values.env }}
    tags.datadoghq.com/service: frontend
  name: frontend
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: ecommerce
    service: frontend
  type: LoadBalancer
