apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/service: storefront
    app: ecommerce
    tags.datadoghq.com/env: "development"
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      tags.datadoghq.com/service: storefront
      tags.datadoghq.com/env: "development"
      app: ecommerce
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        tags.datadoghq.com/service: storefront
        tags.datadoghq.com/env: "development"
        app: ecommerce
    spec:
      containers:
      - args:
        - docker-entrypoint.sh
        command:
        - sh
        env:
        - name: DB_USERNAME
          value: user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: pw
              name: db-password
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_ANALYTICS_ENABLED
          value: "true"
        - name: DISCOUNTS_ROUTE
          value: "http://discounts"
        - name: DISCOUNTS_PORT
          value: "5001"
        - name: ADS_ROUTE
          value: "http://advertisements"
        - name: ADS_PORT
          value: "5002"
        # Enable RUM
        # - name: DD_CLIENT_TOKEN
        #   value: <your_client_token>
        # - name: DD_APPLICATION_ID
        #   value: <your_application_id>
        image: ddtraining/ecommerce-frontend:latest
        imagePullPolicy: Always
        name: ecommerce-spree-observability
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    tags.datadoghq.com/service: storefront
    tags.datadoghq.com/env: development
    app: ecommerce
  name: frontend
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
      name: http
  selector:
    tags.datadoghq.com/service: storefront
    tags.datadoghq.com/env: development
    app: ecommerce
  # Change this value to LoadBalancer for better public ingress routing to this
  # pod on most k8s platforms.
  type: ClusterIP 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storefront
spec:
  defaultBackend:
    service:
      name: frontend
      port:
        number: 3000
